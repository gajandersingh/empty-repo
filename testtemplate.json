{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "func-st-tst-access",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "appInsightsLocation": {
      "type": "string",
     
      "metadata": {
        "description": "Location for Application Insights"
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet",
      "allowedValues": [
        "node",
        "dotnet",
        "java"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    }
  },
  "variables": {
    "functionAppName": "[parameters('appName')]",
    "hostingPlanName": "func-app-service-paln",
    "applicationInsightsName": "ui-func-test",
    "storageAccountName": "eastusfuncstorage",
    "functionWorkerRuntime": "[parameters('runtime')]",
    "vnet_connection_name":"func-vnet-connection"
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "clientAffinityEnabled": false,
        "vnetRouteAllEnabled":true,
        "virtualNetworkSubnetId":"[concat(resourceId('Microsoft.Network/virtualNetworks', 'eastus-vnet'), '/subnets/func-dedicated')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
              {
              "name": "WEBSITE_CONTENTOVERVNET",
              "value": "1"
            },
            {
              "name": "WEBSITE_DNS_SERVER",
              "value": "168.63.129.16"
            },
            {
              "name": "WEBSITE_VNET_ROUTE_ALL",
              "value": "1"
            }

          ],
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2"
        },
        "httpsOnly": true
      },
      "dependsOn": [
       // "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ]
    },
     {
        "type": "Microsoft.Web/sites/virtualNetworkConnections",
        "name": "[concat(variables('functionAppName'), '/', variables('vnet_connection_name'),uniqueString('vnetcon123'))]",
        "apiVersion": "2016-08-01",
        "location": "[parameters('location')]",
        "properties": {
          "vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'eastus-vnet', 'func-dedicated')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
        ]
      },
       
      {
        "type": "Microsoft.Network/privateEndpoints",
        "name": "[concat(variables('functionAppName'), '001-pe')]",
        "apiVersion": "2020-03-01",
        "location": "[parameters('location')]",
         "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
        ],
        "properties": {
           "privateLinkServiceConnections": [
          {
            "name": "[concat(variables('functionAppName'), '001-pe')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
              "groupIds": ["sites"]
            }
          }
        ],
        "manualPrivateLinkServiceConnections": [],
        "subnet": {
          "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'eastus-vnet'), '/subnets/private_endpoint_subnet')]"
        }
        }
      }

  ]
}